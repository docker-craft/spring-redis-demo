version: '3.6'
services:
  redis-1:
    image: redis:5.0.3
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    labels:
      - redis
    deploy:
      replicas: 1
#      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - redis-net

  redis-2:
    image: redis:5.0.3
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    labels:
      - redis
    deploy:
      replicas: 1
      #      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - redis-net

  redis-3:
    image: redis:5.0.3
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    labels:
      - redis
    deploy:
      replicas: 1
      #      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - redis-net

  redis-4:
    image: redis:5.0.3
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    labels:
      - redis
    deploy:
      replicas: 1
      #      mode: global

      restart_policy:
        condition: on-failure
    networks:
      - redis-net

  redis-5:
    image: redis:5.0.3
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    labels:
      - redis
    deploy:
      replicas: 1
      #      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - redis-net

  redis-6:
    image: redis:5.0.3
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--protected-mode no"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    labels:
      - redis
    deploy:
      replicas: 1
      #      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - redis-net

  redis-cluster:
    image: docker.sense.io/centos:docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./shell:/script
    command:
      sh /script/start.sh
#    command: |
#      sh -c "
#        sleep 2
#        cluster_hosts=""
#        docker service ps -f name= base_redis -q |
#        {
#          while read x; do
#            private_ip=$$(docker inspect -f '{{range .NetworksAttachments}}{{range .Addresses}}{{.}}{{end}}{{end}}' $$x)
#            containerIp=$$private_ip | awk -F '/' '{print $$1}' | echo
#            echo $$containerIp
#            cluster_hosts=\"$$cluster_hosts $$containerIp:6379\"
#          done
#          echo $$cluster_hosts
#          echo yes |docker run -i --rm --network redis-net --entrypoint redis-cli docker.sense.io/redis:5.0.3 --cluster create $$cluster_hosts --cluster-replicas 1
#        }
#      "
    depends_on:
      - redis
    networks:
      - redis-net

  redis-demo:
    image: docker.sense.io/redis-demo:latest
    depends_on:
      - redis-cluster
    ports:
      - 8088:8088
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - redis-net

networks:
  redis-net:
    external: true